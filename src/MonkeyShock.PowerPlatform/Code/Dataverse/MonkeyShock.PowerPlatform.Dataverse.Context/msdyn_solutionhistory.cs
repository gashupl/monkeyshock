//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MonkeyShock.PowerPlatform.Dataverse.Context
{
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msdyn_solutionhistory")]
	public partial class msdyn_solutionhistory : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string msdyn_activityid = "msdyn_activityid";
			public const string msdyn_correlationid = "msdyn_correlationid";
			public const string msdyn_endtime = "msdyn_endtime";
			public const string msdyn_errorcode = "msdyn_errorcode";
			public const string msdyn_exceptionmessage = "msdyn_exceptionmessage";
			public const string msdyn_exceptionstack = "msdyn_exceptionstack";
			public const string msdyn_ismanaged = "msdyn_ismanaged";
			public const string msdyn_isoverwritecustomizations = "msdyn_isoverwritecustomizations";
			public const string msdyn_ispatch = "msdyn_ispatch";
			public const string msdyn_maxretries = "msdyn_maxretries";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_operation = "msdyn_operation";
			public const string msdyn_packagename = "msdyn_packagename";
			public const string msdyn_packageversion = "msdyn_packageversion";
			public const string msdyn_publisherid = "msdyn_publisherid";
			public const string msdyn_publishername = "msdyn_publishername";
			public const string msdyn_result = "msdyn_result";
			public const string msdyn_retrycount = "msdyn_retrycount";
			public const string msdyn_solutionhistoryId = "msdyn_solutionhistoryid";
			public const string Id = "msdyn_solutionhistoryid";
			public const string msdyn_solutionid = "msdyn_solutionid";
			public const string msdyn_solutionversion = "msdyn_solutionversion";
			public const string msdyn_starttime = "msdyn_starttime";
			public const string msdyn_status = "msdyn_status";
			public const string msdyn_suboperation = "msdyn_suboperation";
			public const string msdyn_totaltime = "msdyn_totaltime";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_solutionhistory() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "msdyn_solutionhistory";
		
		public const string EntitySchemaName = "msdyn_solutionhistory";
		
		public const string PrimaryIdAttribute = "msdyn_solutionhistoryid";
		
		public const string PrimaryNameAttribute = "msdyn_name";
		
		public const string EntityLogicalCollectionName = "msdyn_solutionhistories";
		
		public const string EntitySetName = "msdyn_solutionhistories";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_activityid")]
		public string msdyn_activityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_activityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_activityid");
				this.SetAttributeValue("msdyn_activityid", value);
				this.OnPropertyChanged("msdyn_activityid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_correlationid")]
		public string msdyn_correlationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_correlationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_correlationid");
				this.SetAttributeValue("msdyn_correlationid", value);
				this.OnPropertyChanged("msdyn_correlationid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_endtime")]
		public System.Nullable<System.DateTime> msdyn_endtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_endtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_endtime");
				this.SetAttributeValue("msdyn_endtime", value);
				this.OnPropertyChanged("msdyn_endtime");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_errorcode")]
		public string msdyn_errorcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_errorcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_errorcode");
				this.SetAttributeValue("msdyn_errorcode", value);
				this.OnPropertyChanged("msdyn_errorcode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_exceptionmessage")]
		public string msdyn_exceptionmessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_exceptionmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_exceptionmessage");
				this.SetAttributeValue("msdyn_exceptionmessage", value);
				this.OnPropertyChanged("msdyn_exceptionmessage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_exceptionstack")]
		public string msdyn_exceptionstack
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_exceptionstack");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_exceptionstack");
				this.SetAttributeValue("msdyn_exceptionstack", value);
				this.OnPropertyChanged("msdyn_exceptionstack");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ismanaged")]
		public System.Nullable<bool> msdyn_ismanaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ismanaged");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ismanaged");
				this.SetAttributeValue("msdyn_ismanaged", value);
				this.OnPropertyChanged("msdyn_ismanaged");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isoverwritecustomizations")]
		public System.Nullable<bool> msdyn_isoverwritecustomizations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isoverwritecustomizations");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_isoverwritecustomizations");
				this.SetAttributeValue("msdyn_isoverwritecustomizations", value);
				this.OnPropertyChanged("msdyn_isoverwritecustomizations");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ispatch")]
		public System.Nullable<bool> msdyn_ispatch
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ispatch");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ispatch");
				this.SetAttributeValue("msdyn_ispatch", value);
				this.OnPropertyChanged("msdyn_ispatch");
			}
		}
		
		/// <summary>
		/// Maximum number of retries.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_maxretries")]
		public System.Nullable<int> msdyn_maxretries
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_maxretries");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_maxretries");
				this.SetAttributeValue("msdyn_maxretries", value);
				this.OnPropertyChanged("msdyn_maxretries");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_name")]
		public string msdyn_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_name");
				this.SetAttributeValue("msdyn_name", value);
				this.OnPropertyChanged("msdyn_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_operation")]
		public Microsoft.Xrm.Sdk.OptionSetValue msdyn_operation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("msdyn_operation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_operation");
				this.SetAttributeValue("msdyn_operation", value);
				this.OnPropertyChanged("msdyn_operation");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_packagename")]
		public string msdyn_packagename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_packagename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_packagename");
				this.SetAttributeValue("msdyn_packagename", value);
				this.OnPropertyChanged("msdyn_packagename");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_packageversion")]
		public string msdyn_packageversion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_packageversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_packageversion");
				this.SetAttributeValue("msdyn_packageversion", value);
				this.OnPropertyChanged("msdyn_packageversion");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_publisherid")]
		public string msdyn_publisherid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_publisherid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_publisherid");
				this.SetAttributeValue("msdyn_publisherid", value);
				this.OnPropertyChanged("msdyn_publisherid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_publishername")]
		public string msdyn_publishername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_publishername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_publishername");
				this.SetAttributeValue("msdyn_publishername", value);
				this.OnPropertyChanged("msdyn_publishername");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_result")]
		public System.Nullable<bool> msdyn_result
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_result");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_result");
				this.SetAttributeValue("msdyn_result", value);
				this.OnPropertyChanged("msdyn_result");
			}
		}
		
		/// <summary>
		/// Retry count
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_retrycount")]
		public System.Nullable<int> msdyn_retrycount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_retrycount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_retrycount");
				this.SetAttributeValue("msdyn_retrycount", value);
				this.OnPropertyChanged("msdyn_retrycount");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_solutionhistoryid")]
		public System.Nullable<System.Guid> msdyn_solutionhistoryId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("msdyn_solutionhistoryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_solutionhistoryId");
				this.SetAttributeValue("msdyn_solutionhistoryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("msdyn_solutionhistoryId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_solutionhistoryid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.msdyn_solutionhistoryId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_solutionid")]
		public string msdyn_solutionid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_solutionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_solutionid");
				this.SetAttributeValue("msdyn_solutionid", value);
				this.OnPropertyChanged("msdyn_solutionid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_solutionversion")]
		public string msdyn_solutionversion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_solutionversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_solutionversion");
				this.SetAttributeValue("msdyn_solutionversion", value);
				this.OnPropertyChanged("msdyn_solutionversion");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_starttime")]
		public System.Nullable<System.DateTime> msdyn_starttime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_starttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_starttime");
				this.SetAttributeValue("msdyn_starttime", value);
				this.OnPropertyChanged("msdyn_starttime");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_status")]
		public Microsoft.Xrm.Sdk.OptionSetValue msdyn_status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("msdyn_status");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_status");
				this.SetAttributeValue("msdyn_status", value);
				this.OnPropertyChanged("msdyn_status");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_suboperation")]
		public Microsoft.Xrm.Sdk.OptionSetValue msdyn_suboperation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("msdyn_suboperation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_suboperation");
				this.SetAttributeValue("msdyn_suboperation", value);
				this.OnPropertyChanged("msdyn_suboperation");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_totaltime")]
		public System.Nullable<int> msdyn_totaltime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_totaltime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_totaltime");
				this.SetAttributeValue("msdyn_totaltime", value);
				this.OnPropertyChanged("msdyn_totaltime");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_solutionhistory(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msdyn_solutionhistoryid"] = base.Id;
                        break;
                    case "msdyn_solutionhistoryid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}